{
    "swagger": "2.0",
    "info": {
        "description": "This is the API service for the Core Indexer project",
        "title": "Core Indexer API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/indexer/account/v1/{accountAddress}": {
            "get": {
                "description": "Retrieve account details by account address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get account by address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account address",
                        "name": "accountAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/db.Account"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/account/v1/{accountAddress}/proposals": {
            "get": {
                "description": "Retrieve proposals associated with an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get account proposals",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account address",
                        "name": "accountAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total Nfts",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether to reverse the order of transactions",
                        "name": "pagination.reverse",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.AccountProposalsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/account/v1/{accountAddress}/txs": {
            "get": {
                "description": "Retrieve transactions associated with an account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Get account transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account address",
                        "name": "accountAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether to reverse the order of transactions",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search term for transactions",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by sent transactions",
                        "name": "is_send",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by IBC transactions",
                        "name": "is_ibc",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by OPINIT transactions",
                        "name": "is_opinit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by Move publish transactions",
                        "name": "is_move_publish",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by Move upgrade transactions",
                        "name": "is_move_upgrade",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by Move execute transactions",
                        "name": "is_move_execute",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Filter by Move script transactions",
                        "name": "is_move_script",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Filter by transactions where the account is a signer",
                        "name": "is_signer",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.AccounTxsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/block/v1/avg_blocktime": {
            "get": {
                "description": "Retrieve the average time taken to mine a block",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get average block time",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BlockTimeAverageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/block/v1/blocks": {
            "get": {
                "description": "Retrieve a list of blocks with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get blocks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BlocksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/block/v1/blocks/{height}/info": {
            "get": {
                "description": "Retrieve detailed information about a block by its height",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get block info by height",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BlockInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/block/v1/blocks/{height}/txs": {
            "get": {
                "description": "Retrieve transactions in a block by its height with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get transactions in a block by height",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Block height",
                        "name": "height",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BlockTxsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/block/v1/latest_block_height": {
            "get": {
                "description": "Retrieve the latest block height",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get latest block height",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BlockHeightLatestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/block/v1/latest_informative_block_height": {
            "get": {
                "description": "Retrieve the latest informative block height",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get latest informative block height",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BlockHeightInformativeLatestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules": {
            "get": {
                "description": "Retrieve a list of modules with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get modules",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModulesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}": {
            "get": {
                "description": "Retrieve a module by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModuleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}/histories": {
            "get": {
                "description": "Retrieve a list of module histories with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module histories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModuleHistoriesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}/proposals": {
            "get": {
                "description": "Retrieve a module proposal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModuleProposalsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}/publish_info": {
            "get": {
                "description": "Retrieve a module publish info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module publish info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModulePublishInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}/stats": {
            "get": {
                "description": "Retrieve a module stats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module stats by module id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModuleStatsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}/transactions": {
            "get": {
                "description": "Retrieve a module transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModuleTxsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/collections": {
            "get": {
                "description": "Retrieve a list of Nft collections with optional search and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term for filtering Nfts",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total Nfts",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NftCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/collections/by_account/{accountAddress}": {
            "get": {
                "description": "Retrieve a list of Nft collections owned by a specific account address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft collections by account address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account address of the Nft owner",
                        "name": "accountAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NftCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/collections/{collectionAddress}": {
            "get": {
                "description": "Retrieve a specific Nft collection by its collection address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft collection by collection address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address of the Nft",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NftCollectionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/collections/{collectionAddress}/activities": {
            "get": {
                "description": "Retrieve activities related to a specific Nft collection with optional search and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft collection activities",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address of the Nft",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search term for filtering activities",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CollectionActivitiesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/collections/{collectionAddress}/creator": {
            "get": {
                "description": "Retrieve the creator of a specific Nft collection by its address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft collection creator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address of the Nft",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CollectionCreatorResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/collections/{collectionAddress}/mutate_events": {
            "get": {
                "description": "Retrieve mutate events for a specific Nft collection by its address with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft collection mutate events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address of the Nft",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total events",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.CollectionMutateEventsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/token/{nftAddress}/mint_info": {
            "get": {
                "description": "Retrieve mint information for a specific Nft by its address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft mint information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nft address",
                        "name": "nftAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NftMintInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/token/{nftAddress}/mutate_events": {
            "get": {
                "description": "Retrieve mutate events for a specific Nft by its address with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft mutate events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nft address",
                        "name": "nftAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total Nfts",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NftMutateEventsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/token/{nftAddress}/txs": {
            "get": {
                "description": "Retrieve transactions related to a specific Nft by its address with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Nft address",
                        "name": "nftAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total Nfts",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether to reverse the order of transactions",
                        "name": "pagination.reverse",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NftTxsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/tokens/by_account/{accountAddress}": {
            "get": {
                "description": "Retrieve a list of Nfts owned by a specific account address with optional search and collection filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nfts by account address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account address of the Nfts owner",
                        "name": "accountAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search term for filtering Nfts",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Collection address to filter Nfts",
                        "name": "collectionAddress",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total Nfts",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NftsByAddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/tokens/by_collection/{collectionAddress}": {
            "get": {
                "description": "Retrieve a list of Nfts by their collection address with optional search and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nfts by collection address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address of the Nfts",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search term for filtering Nfts",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total Nfts",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NftsByAddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/tokens/by_collection/{collectionAddress}/{nftAddress}": {
            "get": {
                "description": "Retrieve a specific Nft by its collection address and Nft address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nft"
                ],
                "summary": "Get Nft by collection address and Nft address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address of the Nft",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Nft address",
                        "name": "nftAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NftByAddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/proposal/v1/proposals": {
            "get": {
                "description": "Retrieve the list of all proposals",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Proposal"
                ],
                "summary": "Get list of proposals",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Filter proposals by proposer",
                        "name": "proposer",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Filter proposals by status(es)",
                        "name": "statuses",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Filter proposals by proposal type",
                        "name": "types",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Search proposals by title or exact proposal id",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProposalsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/proposal/v1/proposals/types": {
            "get": {
                "description": "Retrieve all submitted proposal types",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Proposal"
                ],
                "summary": "Get list of submitted proposal types",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/proposal/v1/proposals/{proposalId}/answer_counts": {
            "get": {
                "description": "Retrieve vote counts of a proposal by options",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Proposal"
                ],
                "summary": "Get votes count of a proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proposal Id",
                        "name": "proposalId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProposalAnswerCountsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/proposal/v1/proposals/{proposalId}/info": {
            "get": {
                "description": "Retrieve proposal details",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Proposal"
                ],
                "summary": "Get proposal info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proposal Id",
                        "name": "proposalId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProposalInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/proposal/v1/proposals/{proposalId}/validator_votes": {
            "get": {
                "description": "Retrieve list of all proposal votes by validators",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Proposal"
                ],
                "summary": "Get validator votes of a proposal",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Proposal Id",
                        "name": "proposalId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Search proposal vote by validator moniker or address",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Search proposal votes by vote option",
                        "name": "answer",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProposalValidatorVotesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/proposal/v1/proposals/{proposalId}/votes": {
            "get": {
                "description": "Retrieve list of all proposal votes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Proposal"
                ],
                "summary": "Get all proposal votes",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Proposal Id",
                        "name": "proposalId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Search proposal vote by voter address",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Search proposal votes by vote option",
                        "name": "answer",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ProposalVotesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/tx/v1/txs": {
            "get": {
                "description": "Retrieve a list of transactions with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TxsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/tx/v1/txs/count": {
            "get": {
                "description": "Retrieve the total number of transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction count",
                "responses": {
                    "200": {
                        "description": "Transaction count",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/tx/v1/txs/{tx_hash}": {
            "get": {
                "description": "Retrieve transaction details by its hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction by hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction hash",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TxResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/validator/v1/validators": {
            "get": {
                "description": "Retrieve the list of all validators",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validator"
                ],
                "summary": "Get list of validators",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Query for active validators",
                        "name": "is_active",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Sort validators by field: 'uptime', 'commission', 'moniker' or empty for default (voting power)",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Search validators by moniker or exact operator address",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidatorsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/validator/v1/validators/{operatorAddr}/answer_counts": {
            "get": {
                "description": "Get validator voted governance proposal answers count",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validator"
                ],
                "summary": "Get validator proposal answers count",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Validator operator address",
                        "name": "operatorAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidatorAnswerCountsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/validator/v1/validators/{operatorAddr}/delegation_related_txs": {
            "get": {
                "description": "Retrieves list of delegation related of a validator",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validator"
                ],
                "summary": "Get delegation transactions of a validator",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Validator operator address",
                        "name": "operatorAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidatorDelegationRelatedTxsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/validator/v1/validators/{operatorAddr}/historical_powers": {
            "get": {
                "description": "Retrieves historical powers of a validator to be rendered",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validator"
                ],
                "summary": "Get validator historical powers",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Validator operator address",
                        "name": "operatorAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidatorHistoricalPowersResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/validator/v1/validators/{operatorAddr}/info": {
            "get": {
                "description": "Get validator info from the operator address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validator"
                ],
                "summary": "Get validator info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Validator operator address",
                        "name": "operatorAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidatorInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/validator/v1/validators/{operatorAddr}/proposed_blocks": {
            "get": {
                "description": "Retrieves list of proposed blocks from a validator",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validator"
                ],
                "summary": "Get validator proposed blocks",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Validator operator address",
                        "name": "operatorAddr",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidatorProposedBlocksResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/validator/v1/validators/{operatorAddr}/uptime": {
            "get": {
                "description": "Get validator uptime from the operator address",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validator"
                ],
                "summary": "Get validator uptime",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Validator operator address",
                        "name": "operatorAddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Blocks to be queried",
                        "name": "blocks",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidatorUptimeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/validator/v1/validators/{operatorAddr}/voted_proposals": {
            "get": {
                "description": "Retrieves list of voted governance proposals from a validator",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Validator"
                ],
                "summary": "Get validator voted proposals",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Validator operator address",
                        "name": "operatorAddr",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Search validators by moniker or exact operator address",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "",
                        "description": "Filter by given answer",
                        "name": "answer",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ValidatorVotedProposalsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperror.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "db.Account": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "vm_address_id": {
                    "type": "string"
                }
            }
        },
        "dto.AccounTxsResponse": {
            "type": "object",
            "properties": {
                "account_txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AccountTx"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.AccountProposal": {
            "type": "object",
            "properties": {
                "deposit_end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_emergency": {
                    "type": "boolean"
                },
                "is_expedited": {
                    "type": "boolean"
                },
                "proposer": {
                    "type": "string"
                },
                "resolved_height": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "voting_end_time": {
                    "type": "string"
                }
            }
        },
        "dto.AccountProposalsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.AccountProposal"
                    }
                }
            }
        },
        "dto.AccountTx": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "is_ibc": {
                    "type": "boolean"
                },
                "is_move_execute": {
                    "type": "boolean"
                },
                "is_move_publish": {
                    "type": "boolean"
                },
                "is_move_script": {
                    "type": "boolean"
                },
                "is_opinit": {
                    "type": "boolean"
                },
                "is_send": {
                    "type": "boolean"
                },
                "is_signer": {
                    "type": "boolean"
                },
                "messages": {
                    "type": "object"
                },
                "sender": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "dto.AuthInfo": {
            "type": "object",
            "properties": {
                "fee": {
                    "$ref": "#/definitions/dto.Fee"
                },
                "signer_infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SignerInfo"
                    }
                }
            }
        },
        "dto.Block": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "proposer": {
                    "$ref": "#/definitions/dto.BlockProposer"
                },
                "timestamp": {
                    "type": "string"
                },
                "tx_count": {
                    "type": "integer"
                }
            }
        },
        "dto.BlockHeightInformativeLatestResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                }
            }
        },
        "dto.BlockHeightLatestResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                }
            }
        },
        "dto.BlockInfoResponse": {
            "type": "object",
            "properties": {
                "gas_limit": {
                    "type": "integer"
                },
                "gas_used": {
                    "type": "integer"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "proposer": {
                    "$ref": "#/definitions/dto.BlockProposer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.BlockProposer": {
            "type": "object",
            "properties": {
                "identity": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "operator_address": {
                    "type": "string"
                }
            }
        },
        "dto.BlockTimeAverageResponse": {
            "type": "object",
            "properties": {
                "avg_block_time": {
                    "type": "number"
                }
            }
        },
        "dto.BlockTxModel": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "is_ibc": {
                    "type": "boolean"
                },
                "is_opinit": {
                    "type": "boolean"
                },
                "is_send": {
                    "type": "boolean"
                },
                "messages": {
                    "type": "object"
                },
                "success": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.BlockTxsResponse": {
            "type": "object",
            "properties": {
                "block_txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.BlockTxModel"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.BlocksResponse": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Block"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.Body": {
            "type": "object",
            "properties": {
                "memo": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "timeout_height": {
                    "type": "string"
                }
            }
        },
        "dto.Coin": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "denom": {
                    "type": "string"
                }
            }
        },
        "dto.CollectionActivitiesResponse": {
            "type": "object",
            "properties": {
                "collection_activities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CollectionActivityModel"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.CollectionActivityModel": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "is_collection_create": {
                    "type": "boolean"
                },
                "is_nft_burn": {
                    "type": "boolean"
                },
                "is_nft_mint": {
                    "type": "boolean"
                },
                "is_nft_transfer": {
                    "type": "boolean"
                },
                "nft_id": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "token_id": {
                    "type": "string"
                }
            }
        },
        "dto.CollectionCreatorModel": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.CollectionCreatorResponse": {
            "type": "object",
            "properties": {
                "creator": {
                    "$ref": "#/definitions/dto.CollectionCreatorModel"
                }
            }
        },
        "dto.CollectionMutateEventsResponse": {
            "type": "object",
            "properties": {
                "collection_mutate_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MutateEventModel"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.Event": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EventAttribute"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.EventAttribute": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.Fee": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Coin"
                    }
                },
                "gas_limit": {
                    "type": "string"
                },
                "granter": {
                    "type": "string"
                },
                "payer": {
                    "type": "string"
                }
            }
        },
        "dto.Log": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Event"
                    }
                },
                "log": {
                    "description": "Can be string or map[string]string"
                },
                "msg_index": {
                    "type": "integer"
                }
            }
        },
        "dto.MessageType": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleHistoriesResponse": {
            "type": "object",
            "properties": {
                "module_histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ModuleHistoryResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.ModuleHistoryResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "previous_policy": {
                    "type": "string"
                },
                "remark": {
                    "type": "object"
                },
                "timestamp": {
                    "type": "string"
                },
                "upgrade_policy": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleProposalModel": {
            "type": "object",
            "properties": {
                "deposit_end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_emergency": {
                    "type": "boolean"
                },
                "is_expedited": {
                    "type": "boolean"
                },
                "proposer": {
                    "type": "string"
                },
                "resolved_height": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "types": {
                    "type": "object"
                },
                "voting_end_time": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleProposalsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ModuleProposalModel"
                    }
                }
            }
        },
        "dto.ModulePublishInfoResponse": {
            "type": "object",
            "properties": {
                "is_republished": {
                    "type": "boolean"
                },
                "recent_publish_block_height": {
                    "type": "integer"
                },
                "recent_publish_block_timestamp": {
                    "type": "string"
                },
                "recent_publish_proposal": {
                    "$ref": "#/definitions/dto.Proposal"
                },
                "recent_publish_transaction": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "is_republished": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "latest_updated": {
                    "type": "string"
                },
                "module_name": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleStatsResponse": {
            "type": "object",
            "properties": {
                "total_histories": {
                    "type": "integer"
                },
                "total_proposals": {
                    "type": "integer"
                },
                "total_txs": {
                    "type": "integer"
                }
            }
        },
        "dto.ModuleTxResponse": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "is_ibc": {
                    "type": "boolean"
                },
                "is_move_execute": {
                    "type": "boolean"
                },
                "is_move_execute_event": {
                    "type": "boolean"
                },
                "is_move_publish": {
                    "type": "boolean"
                },
                "is_move_script": {
                    "type": "boolean"
                },
                "is_move_upgrade": {
                    "type": "boolean"
                },
                "is_opinit": {
                    "type": "boolean"
                },
                "is_send": {
                    "type": "boolean"
                },
                "messages": {
                    "type": "object"
                },
                "sender": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleTxsResponse": {
            "type": "object",
            "properties": {
                "module_txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ModuleTxResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.ModulesResponse": {
            "type": "object",
            "properties": {
                "modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ModuleResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.MutateEventModel": {
            "type": "object",
            "properties": {
                "mutated_field_name": {
                    "type": "string"
                },
                "new_value": {
                    "type": "string"
                },
                "old_value": {
                    "type": "string"
                },
                "remark": {
                    "type": "object"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.NftByAddressNft": {
            "type": "object",
            "properties": {
                "collection": {
                    "$ref": "#/definitions/dto.NftByAddressNftCollection"
                },
                "description": {
                    "type": "string"
                },
                "is_burned": {
                    "type": "boolean"
                },
                "token_id": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "dto.NftByAddressNftCollection": {
            "type": "object",
            "properties": {
                "inner": {
                    "type": "string"
                }
            }
        },
        "dto.NftByAddressResponse": {
            "type": "object",
            "properties": {
                "collection_addr": {
                    "type": "string"
                },
                "collection_name": {
                    "type": "string"
                },
                "nft": {
                    "$ref": "#/definitions/dto.NftByAddressNft"
                },
                "object_addr": {
                    "type": "string"
                },
                "owner_addr": {
                    "type": "string"
                }
            }
        },
        "dto.NftCollectionCollection": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "nft": {
                    "$ref": "#/definitions/dto.NftCollectionCollectionNft"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "dto.NftCollectionCollectionNft": {
            "type": "object",
            "properties": {
                "length": {
                    "type": "integer"
                }
            }
        },
        "dto.NftCollectionResponse": {
            "type": "object",
            "properties": {
                "collection": {
                    "$ref": "#/definitions/dto.NftCollectionCollection"
                },
                "object_addr": {
                    "type": "string"
                }
            }
        },
        "dto.NftCollectionsResponse": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.NftCollectionResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.NftMintInfoResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "minter": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "txhash": {
                    "type": "string"
                }
            }
        },
        "dto.NftMutateEventsResponse": {
            "type": "object",
            "properties": {
                "nft_mutate_events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MutateEventModel"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.NftTx": {
            "type": "object",
            "properties": {
                "is_nft_burn": {
                    "type": "boolean"
                },
                "is_nft_mint": {
                    "type": "boolean"
                },
                "is_nft_transfer": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                },
                "txhash": {
                    "type": "string"
                }
            }
        },
        "dto.NftTxsResponse": {
            "type": "object",
            "properties": {
                "nft_txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.NftTx"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.NftsByAddressResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.NftByAddressResponse"
                    }
                }
            }
        },
        "dto.PaginationResponse": {
            "type": "object",
            "properties": {
                "next_key": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.Proposal": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer"
                },
                "proposal_title": {
                    "type": "string"
                }
            }
        },
        "dto.ProposalAnswerCounts": {
            "type": "object",
            "properties": {
                "abstain": {
                    "type": "integer"
                },
                "no": {
                    "type": "integer"
                },
                "no_with_veto": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "weighted": {
                    "type": "integer"
                },
                "yes": {
                    "type": "integer"
                }
            }
        },
        "dto.ProposalAnswerCountsResponse": {
            "type": "object",
            "properties": {
                "all": {
                    "$ref": "#/definitions/dto.ProposalAnswerCounts"
                },
                "validator": {
                    "$ref": "#/definitions/dto.ProposalValidatorAnswerCounts"
                }
            }
        },
        "dto.ProposalContent": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "object"
                },
                "metadata": {
                    "type": "string"
                }
            }
        },
        "dto.ProposalDeposit": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Coin"
                    }
                },
                "depositor": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        },
        "dto.ProposalInfo": {
            "type": "object",
            "properties": {
                "abstain": {
                    "type": "string"
                },
                "content": {
                    "$ref": "#/definitions/dto.ProposalContent"
                },
                "created_height": {
                    "type": "integer"
                },
                "created_timestamp": {
                    "type": "string"
                },
                "created_tx_hash": {
                    "type": "string"
                },
                "deposit_end_time": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "failed_reason": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_emergency": {
                    "type": "boolean"
                },
                "is_expedited": {
                    "type": "boolean"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "metadata": {
                    "type": "string"
                },
                "no": {
                    "type": "string"
                },
                "no_with_veto": {
                    "type": "string"
                },
                "proposal_deposits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProposalDeposit"
                    }
                },
                "proposer": {
                    "type": "string"
                },
                "resolved_height": {
                    "type": "integer"
                },
                "resolved_timestamp": {
                    "type": "string"
                },
                "resolved_total_voting_power": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "submit_time": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "total_deposit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Coin"
                    }
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "version": {
                    "type": "string"
                },
                "voting_end_time": {
                    "type": "string"
                },
                "voting_time": {
                    "type": "string"
                },
                "yes": {
                    "type": "string"
                }
            }
        },
        "dto.ProposalInfoResponse": {
            "type": "object",
            "properties": {
                "info": {
                    "$ref": "#/definitions/dto.ProposalInfo"
                }
            }
        },
        "dto.ProposalSummary": {
            "type": "object",
            "properties": {
                "deposit_end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_emergency": {
                    "type": "boolean"
                },
                "is_expedited": {
                    "type": "boolean"
                },
                "proposer": {
                    "type": "string"
                },
                "resolved_height": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "types": {
                    "type": "object"
                },
                "voting_end_time": {
                    "type": "string"
                }
            }
        },
        "dto.ProposalValidatorAnswerCounts": {
            "type": "object",
            "properties": {
                "abstain": {
                    "type": "integer"
                },
                "did_not_vote": {
                    "type": "integer"
                },
                "no": {
                    "type": "integer"
                },
                "no_with_veto": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "total_validators": {
                    "type": "integer"
                },
                "weighted": {
                    "type": "integer"
                },
                "yes": {
                    "type": "integer"
                }
            }
        },
        "dto.ProposalValidatorVote": {
            "type": "object",
            "properties": {
                "identity": {
                    "type": "string"
                },
                "moniker": {
                    "type": "string"
                },
                "validator_address": {
                    "type": "string"
                }
            }
        },
        "dto.ProposalValidatorVotesResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProposalVote"
                    }
                }
            }
        },
        "dto.ProposalVote": {
            "type": "object",
            "properties": {
                "abstain": {
                    "type": "number"
                },
                "is_vote_weighted": {
                    "type": "boolean"
                },
                "no": {
                    "type": "number"
                },
                "no_with_veto": {
                    "type": "number"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "validator": {
                    "$ref": "#/definitions/dto.ProposalValidatorVote"
                },
                "voter": {
                    "type": "string"
                },
                "yes": {
                    "type": "number"
                }
            }
        },
        "dto.ProposalVotesResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "votes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProposalVote"
                    }
                }
            }
        },
        "dto.ProposalsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ProposalSummary"
                    }
                }
            }
        },
        "dto.PublicKey": {
            "type": "object",
            "properties": {
                "@type": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "dto.SignerInfo": {
            "type": "object",
            "properties": {
                "public_key": {
                    "$ref": "#/definitions/dto.PublicKey"
                },
                "sequence": {
                    "type": "string"
                }
            }
        },
        "dto.Tx": {
            "type": "object",
            "properties": {
                "auth_info": {
                    "$ref": "#/definitions/dto.AuthInfo"
                },
                "body": {
                    "$ref": "#/definitions/dto.Body"
                },
                "signatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.TxModel": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "is_ibc": {
                    "type": "boolean"
                },
                "is_opinit": {
                    "type": "boolean"
                },
                "is_send": {
                    "type": "boolean"
                },
                "messages": {
                    "type": "object"
                },
                "sender": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.TxResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "codespace": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Event"
                    }
                },
                "gas_used": {
                    "type": "string"
                },
                "gas_wanted": {
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Log"
                    }
                },
                "raw_log": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "unix time (GMT)",
                    "type": "string"
                },
                "tx": {
                    "$ref": "#/definitions/dto.Tx"
                },
                "txhash": {
                    "type": "string"
                }
            }
        },
        "dto.TxsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TxModel"
                    }
                }
            }
        },
        "dto.ValidatorAnswerCountsResponse": {
            "type": "object",
            "properties": {
                "abstain": {
                    "type": "integer"
                },
                "all": {
                    "type": "integer"
                },
                "did_not_vote": {
                    "type": "integer"
                },
                "no": {
                    "type": "integer"
                },
                "no_with_veto": {
                    "type": "integer"
                },
                "weighted": {
                    "type": "integer"
                },
                "yes": {
                    "type": "integer"
                }
            }
        },
        "dto.ValidatorBlockVoteModel": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "vote": {
                    "type": "string"
                }
            }
        },
        "dto.ValidatorDelegationRelatedTx": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.MessageType"
                    }
                },
                "sender": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Coin"
                    }
                },
                "tx_hash": {
                    "type": "string"
                }
            }
        },
        "dto.ValidatorDelegationRelatedTxsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "validator_delegation_related_txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ValidatorDelegationRelatedTx"
                    }
                }
            }
        },
        "dto.ValidatorHistoricalPowerModel": {
            "type": "object",
            "properties": {
                "hour_rounded_timestamp": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "voting_power": {
                    "type": "string"
                }
            }
        },
        "dto.ValidatorHistoricalPowersResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "validator_historical_powers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ValidatorHistoricalPowerModel"
                    }
                }
            }
        },
        "dto.ValidatorInfo": {
            "type": "object",
            "properties": {
                "account_address": {
                    "type": "string"
                },
                "commission_rate": {
                    "type": "string"
                },
                "consensus_address": {
                    "type": "string"
                },
                "details": {
                    "type": "string"
                },
                "identity": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "is_jailed": {
                    "type": "boolean"
                },
                "moniker": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "uptime": {
                    "type": "integer"
                },
                "validator_address": {
                    "type": "string"
                },
                "voting_power": {
                    "type": "string"
                },
                "website": {
                    "type": "string"
                }
            }
        },
        "dto.ValidatorInfoResponse": {
            "type": "object",
            "properties": {
                "info": {
                    "$ref": "#/definitions/dto.ValidatorInfo"
                },
                "total_voting_power": {
                    "type": "string"
                }
            }
        },
        "dto.ValidatorProposedBlockModel": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "transaction_count": {
                    "type": "integer"
                },
                "validator": {
                    "$ref": "#/definitions/dto.BlockProposer"
                }
            }
        },
        "dto.ValidatorProposedBlocksResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "validators_proposed_blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ValidatorProposedBlockModel"
                    }
                }
            }
        },
        "dto.ValidatorUptimeEventModel": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.ValidatorUptimeResponse": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ValidatorUptimeEventModel"
                    }
                },
                "recent_100_blocks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ValidatorBlockVoteModel"
                    }
                },
                "uptime": {
                    "$ref": "#/definitions/dto.ValidatorUptimeSummary"
                }
            }
        },
        "dto.ValidatorUptimeSummary": {
            "type": "object",
            "properties": {
                "missed_blocks": {
                    "type": "integer"
                },
                "proposed_blocks": {
                    "type": "integer"
                },
                "signed_blocks": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.ValidatorVotedProposal": {
            "type": "object",
            "properties": {
                "abstain": {
                    "type": "number"
                },
                "is_emergency": {
                    "type": "boolean"
                },
                "is_expedited": {
                    "type": "boolean"
                },
                "is_vote_weighted": {
                    "type": "boolean"
                },
                "no": {
                    "type": "number"
                },
                "no_with_veto": {
                    "type": "number"
                },
                "proposal_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "tx_hash": {
                    "type": "string"
                },
                "types": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "yes": {
                    "type": "number"
                }
            }
        },
        "dto.ValidatorVotedProposalsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "validator_voted_proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ValidatorVotedProposal"
                    }
                }
            }
        },
        "dto.ValidatorsMetadata": {
            "type": "object",
            "properties": {
                "active_count": {
                    "type": "integer"
                },
                "inactive_count": {
                    "type": "integer"
                },
                "min_commission_rate": {
                    "type": "string"
                },
                "percent_33_rank": {
                    "type": "integer"
                },
                "percent_66_rank": {
                    "type": "integer"
                },
                "total_voting_power": {
                    "type": "string"
                }
            }
        },
        "dto.ValidatorsResponse": {
            "type": "object",
            "properties": {
                "metadata": {
                    "$ref": "#/definitions/dto.ValidatorsMetadata"
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "validators_info": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ValidatorInfo"
                    }
                }
            }
        }
    },
    "tags": [
        {
            "description": "Block related endpoints",
            "name": "Block"
        },
        {
            "description": "Health check endpoints",
            "name": "Health"
        },
        {
            "description": "Module related endpoints",
            "name": "Module"
        },
        {
            "description": "Nft related endpoints",
            "name": "Nft"
        },
        {
            "description": "Proposal related endpoints",
            "name": "Proposal"
        },
        {
            "description": "Root endpoints",
            "name": "Root"
        },
        {
            "description": "Transaction related endpoints",
            "name": "Transaction"
        },
        {
            "description": "Validator related endpoints",
            "name": "Validator"
        }
    ]
}