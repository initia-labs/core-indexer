// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/indexer/block/v1/avg_blocktime": {
            "get": {
                "description": "Retrieve the average time taken to mine a block",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get average block time",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BlockTimeAverageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/block/v1/latest_block_height": {
            "get": {
                "description": "Retrieve the latest block height",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get latest block height",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.BlockHeightLatestResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules": {
            "get": {
                "description": "Retrieve a list of modules with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get modules",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModulesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}": {
            "get": {
                "description": "Retrieve a module by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModuleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}/histories": {
            "get": {
                "description": "Retrieve a list of module histories with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module histories",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModuleHistoriesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}/proposals": {
            "get": {
                "description": "Retrieve a module proposal",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module proposal",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModuleProposalsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}/publish_info": {
            "get": {
                "description": "Retrieve a module publish info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module publish info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModulePublishInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/module/v1/modules/{vmAddress}/{name}/transactions": {
            "get": {
                "description": "Retrieve a module transaction",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Module"
                ],
                "summary": "Get module transaction",
                "parameters": [
                    {
                        "type": "string",
                        "description": "VM address",
                        "name": "vmAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Module name",
                        "name": "name",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ModuleTxsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/tx/v1/txs/count": {
            "get": {
                "description": "Retrieve the total number of transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction count",
                "responses": {
                    "200": {
                        "description": "Transaction count",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/indexer/tx/v1/txs/{tx_hash}": {
            "get": {
                "description": "Retrieve transaction details by its hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction by hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction hash",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TxResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        },
        "/nft/v1/collections": {
            "get": {
                "description": "Retrieve a list of NFT collections with optional search and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term for filtering collections",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NFTCollectionsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/apperror.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apperror.Response": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                }
            }
        },
        "db.Collection": {
            "type": "object",
            "properties": {
                "block_height": {
                    "type": "integer"
                },
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "dto.AuthInfo": {
            "type": "object",
            "properties": {
                "fee": {
                    "$ref": "#/definitions/dto.Fee"
                },
                "signer_infos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.SignerInfo"
                    }
                }
            }
        },
        "dto.BlockHeightLatestResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                }
            }
        },
        "dto.BlockTimeAverageResponse": {
            "type": "object",
            "properties": {
                "avg_block_time": {
                    "type": "number"
                }
            }
        },
        "dto.Body": {
            "type": "object",
            "properties": {
                "memo": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "timeout_height": {
                    "type": "string"
                }
            }
        },
        "dto.Coin": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "denom": {
                    "type": "string"
                }
            }
        },
        "dto.Event": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EventAttribute"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "dto.EventAttribute": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dto.Fee": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Coin"
                    }
                },
                "gas_limit": {
                    "type": "string"
                },
                "granter": {
                    "type": "string"
                },
                "payer": {
                    "type": "string"
                }
            }
        },
        "dto.Log": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Event"
                    }
                },
                "log": {
                    "description": "Can be string or map[string]string"
                },
                "msg_index": {
                    "type": "integer"
                }
            }
        },
        "dto.ModuleHistoriesResponse": {
            "type": "object",
            "properties": {
                "module_histories": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ModuleHistoryResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.ModuleHistoryResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "previous_policy": {
                    "type": "string"
                },
                "remark": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "timestamp": {
                    "type": "string"
                },
                "upgrade_policy": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleProposalModel": {
            "type": "object",
            "properties": {
                "deposit_end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_emergency": {
                    "type": "boolean"
                },
                "is_expedited": {
                    "type": "boolean"
                },
                "proposer": {
                    "type": "string"
                },
                "resolved_height": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "types": {
                    "type": "string"
                },
                "voting_end_time": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleProposalsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "proposals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ModuleProposalModel"
                    }
                }
            }
        },
        "dto.ModulePublishInfoResponse": {
            "type": "object",
            "properties": {
                "is_republished": {
                    "type": "boolean"
                },
                "recent_publish_block_height": {
                    "type": "integer"
                },
                "recent_publish_block_timestamp": {
                    "type": "string"
                },
                "recent_publish_proposal": {
                    "$ref": "#/definitions/dto.Proposal"
                },
                "recent_publish_transaction": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "digest": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "is_republished": {
                    "type": "boolean"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "latest_updated": {
                    "type": "string"
                },
                "module_name": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleTxResponse": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "is_ibc": {
                    "type": "boolean"
                },
                "is_move_execute": {
                    "type": "boolean"
                },
                "is_move_execute_event": {
                    "type": "boolean"
                },
                "is_move_publish": {
                    "type": "boolean"
                },
                "is_move_script": {
                    "type": "boolean"
                },
                "is_move_upgrade": {
                    "type": "boolean"
                },
                "is_opinit": {
                    "type": "boolean"
                },
                "is_send": {
                    "type": "boolean"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sender": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.ModuleTxsResponse": {
            "type": "object",
            "properties": {
                "module_txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ModuleTxResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.ModulesResponse": {
            "type": "object",
            "properties": {
                "modules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ModuleResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.NFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/db.Collection"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.PaginationResponse": {
            "type": "object",
            "properties": {
                "next_key": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.Proposal": {
            "type": "object",
            "properties": {
                "proposal_id": {
                    "type": "integer"
                },
                "proposal_title": {
                    "type": "string"
                }
            }
        },
        "dto.PublicKey": {
            "type": "object",
            "properties": {
                "@type": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                }
            }
        },
        "dto.RestTx": {
            "type": "object",
            "properties": {
                "auth_info": {
                    "$ref": "#/definitions/dto.AuthInfo"
                },
                "body": {
                    "$ref": "#/definitions/dto.Body"
                },
                "signatures": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dto.SignerInfo": {
            "type": "object",
            "properties": {
                "public_key": {
                    "$ref": "#/definitions/dto.PublicKey"
                },
                "sequence": {
                    "type": "string"
                }
            }
        },
        "dto.TxResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "codespace": {
                    "type": "string"
                },
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Event"
                    }
                },
                "gas_used": {
                    "type": "string"
                },
                "gas_wanted": {
                    "type": "string"
                },
                "height": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.Log"
                    }
                },
                "raw_log": {
                    "type": "string"
                },
                "timestamp": {
                    "description": "unix time (GMT)",
                    "type": "string"
                },
                "tx": {
                    "$ref": "#/definitions/dto.RestTx"
                },
                "txhash": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "NFT related endpoints",
            "name": "NFT"
        },
        {
            "description": "Transaction related endpoints",
            "name": "Transaction"
        },
        {
            "description": "Health check endpoints",
            "name": "Health"
        },
        {
            "description": "Root endpoints",
            "name": "Root"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Core Indexer API",
	Description:      "This is the API service for the Core Indexer project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
