// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/indexer/block/v1/avg_blocktime": {
            "get": {
                "description": "Retrieve the average time taken to mine a block",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get average block time",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RestBlockTimeAverageResponse"
                        }
                    }
                }
            }
        },
        "/indexer/block/v1/latest_block_height": {
            "get": {
                "description": "Retrieve the latest block height",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Block"
                ],
                "summary": "Get latest block height",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RestBlockHeightLatestResponse"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/collections": {
            "get": {
                "description": "Retrieve a list of NFT collections with optional search and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT collections",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search term for filtering collections",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NFTCollectionsResponse"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/token/{nftAddress}/mint-info": {
            "get": {
                "description": "Retrieve mint information for a specific NFT by its address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT mint information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NFT address",
                        "name": "nftAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NFTMintInfoResponse"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/token/{nftAddress}/mutate-events": {
            "get": {
                "description": "Retrieve mutate events for a specific NFT by its address with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT mutate events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NFT address",
                        "name": "nftAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total NFTs",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NFTMutateEventsResponse"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/token/{nftAddress}/txs": {
            "get": {
                "description": "Retrieve transactions related to a specific NFT by its address with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT transactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "NFT address",
                        "name": "nftAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total NFTs",
                        "name": "pagination.count_total",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": true,
                        "description": "Whether to reverse the order of transactions",
                        "name": "pagination.reverse",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NFTTxsResponse"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/tokens/by_account/{accountAddress}": {
            "get": {
                "description": "Retrieve a list of NFTs owned by a specific account address with optional search and collection filtering",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFTs by account address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Account address of the NFTs owner",
                        "name": "accountAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search term for filtering NFTs",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Collection address to filter NFTs",
                        "name": "collectionAddress",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total NFTs",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NFTsByAddressResponse"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/tokens/by_collection/{collectionAddress}": {
            "get": {
                "description": "Retrieve a list of NFTs by their collection address with optional search and pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFTs by collection address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address of the NFTs",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Search term for filtering NFTs",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Whether to count total NFTs",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NFTsByAddressResponse"
                        }
                    }
                }
            }
        },
        "/indexer/nft/v1/tokens/by_collection/{collectionAddress}/{nftAddress}": {
            "get": {
                "description": "Retrieve a specific NFT by its collection address and NFT address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "NFT"
                ],
                "summary": "Get NFT by collection address and NFT address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Collection address of the NFT",
                        "name": "collectionAddress",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "NFT address",
                        "name": "nftAddress",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.NFTByAddressResponse"
                        }
                    }
                }
            }
        },
        "/indexer/tx/v1/txs": {
            "get": {
                "description": "Retrieve a list of transactions with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transactions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Offset for pagination",
                        "name": "pagination.offset",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Limit for pagination",
                        "name": "pagination.limit",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Reverse order for pagination",
                        "name": "pagination.reverse",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "default": false,
                        "description": "Count total number of transactions",
                        "name": "pagination.count_total",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.RestTxsResponse"
                        }
                    }
                }
            }
        },
        "/indexer/tx/v1/txs/count": {
            "get": {
                "description": "Retrieve the total number of transactions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction count",
                "responses": {
                    "200": {
                        "description": "Transaction count",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/indexer/tx/v1/txs/{tx_hash}": {
            "get": {
                "description": "Retrieve transaction details by its hash",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "Get transaction by hash",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction hash",
                        "name": "tx_hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.TxResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.NFTByAddressNFTCollectionResponse": {
            "type": "object",
            "properties": {
                "inner": {
                    "type": "string"
                }
            }
        },
        "dto.NFTByAddressNFTResponse": {
            "type": "object",
            "properties": {
                "collection": {
                    "$ref": "#/definitions/dto.NFTByAddressNFTCollectionResponse"
                },
                "description": {
                    "type": "string"
                },
                "is_burned": {
                    "type": "boolean"
                },
                "token_id": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "dto.NFTByAddressResponse": {
            "type": "object",
            "properties": {
                "collection_addr": {
                    "type": "string"
                },
                "collection_name": {
                    "type": "string"
                },
                "nft": {
                    "$ref": "#/definitions/dto.NFTByAddressNFTResponse"
                },
                "object_addr": {
                    "type": "string"
                },
                "owner_addr": {
                    "type": "string"
                }
            }
        },
        "dto.NFTCollection": {
            "type": "object",
            "properties": {
                "creator": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "uri": {
                    "type": "string"
                }
            }
        },
        "dto.NFTCollectionsResponse": {
            "type": "object",
            "properties": {
                "collections": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.NFTCollection"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.NFTMintInfoResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                },
                "minter": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "txhash": {
                    "type": "string"
                }
            }
        },
        "dto.NFTMutateEventResponse": {
            "type": "object",
            "properties": {
                "mutated_field_name": {
                    "type": "string"
                },
                "new_value": {
                    "type": "string"
                },
                "old_value": {
                    "type": "string"
                },
                "remark": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        },
        "dto.NFTMutateEventsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.NFTMutateEventResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.NFTTxResponse": {
            "type": "object",
            "properties": {
                "is_nft_burn": {
                    "type": "boolean"
                },
                "is_nft_mint": {
                    "type": "boolean"
                },
                "is_nft_transfer": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                },
                "txhash": {
                    "type": "string"
                }
            }
        },
        "dto.NFTTxsResponse": {
            "type": "object",
            "properties": {
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.NFTTxResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                }
            }
        },
        "dto.NFTsByAddressResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "tokens": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.NFTByAddressResponse"
                    }
                }
            }
        },
        "dto.PaginationResponse": {
            "type": "object",
            "properties": {
                "next_key": {
                    "type": "string"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "dto.RestBlockHeightLatestResponse": {
            "type": "object",
            "properties": {
                "height": {
                    "type": "integer"
                }
            }
        },
        "dto.RestBlockTimeAverageResponse": {
            "type": "object",
            "properties": {
                "avg_block_time": {
                    "type": "number"
                }
            }
        },
        "dto.RestTxsResponse": {
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/dto.PaginationResponse"
                },
                "txs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TxResponse"
                    }
                }
            }
        },
        "dto.TxResponse": {
            "type": "object",
            "properties": {
                "hash": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "is_ibc": {
                    "type": "boolean"
                },
                "is_opinit": {
                    "type": "boolean"
                },
                "is_send": {
                    "type": "boolean"
                },
                "messages": {
                    "type": "object"
                },
                "sender": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "NFT related endpoints",
            "name": "NFT"
        },
        {
            "description": "Transaction related endpoints",
            "name": "Transaction"
        },
        {
            "description": "Health check endpoints",
            "name": "Health"
        },
        {
            "description": "Root endpoints",
            "name": "Root"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Core Indexer API",
	Description:      "This is the API service for the Core Indexer project",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
