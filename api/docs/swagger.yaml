basePath: /
definitions:
  apperror.Response:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  db.Account:
    properties:
      address:
        type: string
      name:
        type: string
      type:
        type: string
      vm_address_id:
        type: string
    type: object
  dto.AccounTxsResponse:
    properties:
      account_txs:
        items:
          $ref: '#/definitions/dto.AccountTxResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.AccountProposalResponse:
    properties:
      deposit_end_time:
        type: string
      id:
        type: integer
      is_emergency:
        type: boolean
      is_expedited:
        type: boolean
      proposer:
        type: string
      resolved_height:
        type: integer
      status:
        type: string
      title:
        type: string
      type:
        type: string
      voting_end_time:
        type: string
    type: object
  dto.AccountProposalsResponse:
    properties:
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
      proposals:
        items:
          $ref: '#/definitions/dto.AccountProposalResponse'
        type: array
    type: object
  dto.AccountTxResponse:
    properties:
      created:
        type: string
      hash:
        type: string
      height:
        type: integer
      is_ibc:
        type: boolean
      is_send:
        type: boolean
      is_signer:
        type: boolean
      messages:
        type: object
      sender:
        type: string
      success:
        type: boolean
    type: object
  dto.AuthInfo:
    properties:
      fee:
        $ref: '#/definitions/dto.Fee'
      signer_infos:
        items:
          $ref: '#/definitions/dto.SignerInfo'
        type: array
    type: object
  dto.BlockHeightLatestResponse:
    properties:
      height:
        type: integer
    type: object
  dto.BlockInfoResponse:
    properties:
      gas_limit:
        type: integer
      gas_used:
        type: integer
      hash:
        type: string
      height:
        type: integer
      proposer:
        $ref: '#/definitions/dto.BlockProposerResponse'
      timestamp:
        type: string
    type: object
  dto.BlockProposer:
    properties:
      identity:
        type: string
      moniker:
        type: string
      operator_address:
        type: string
    type: object
  dto.BlockProposerResponse:
    properties:
      identify:
        type: string
      moniker:
        type: string
      operator_address:
        type: string
    type: object
  dto.BlockResponse:
    properties:
      hash:
        type: string
      height:
        type: integer
      proposer:
        $ref: '#/definitions/dto.BlockProposerResponse'
      timestamp:
        type: string
      tx_count:
        type: integer
    type: object
  dto.BlockTimeAverageResponse:
    properties:
      avg_block_time:
        type: number
    type: object
  dto.BlockTxResponse:
    properties:
      address:
        type: string
      hash:
        type: string
      height:
        type: integer
      is_ibc:
        type: boolean
      is_opinit:
        type: boolean
      is_send:
        type: boolean
      messages:
        type: object
      success:
        type: boolean
      timestamp:
        type: string
    type: object
  dto.BlockTxsResponse:
    properties:
      block_txs:
        items:
          $ref: '#/definitions/dto.BlockTxResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.BlocksResponse:
    properties:
      blocks:
        items:
          $ref: '#/definitions/dto.BlockResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.Body:
    properties:
      memo:
        type: string
      messages:
        items:
          additionalProperties: true
          type: object
        type: array
      timeout_height:
        type: string
    type: object
  dto.Coin:
    properties:
      amount:
        type: string
      denom:
        type: string
    type: object
  dto.CollectionActivitiesResponse:
    properties:
      collection_activities:
        items:
          $ref: '#/definitions/dto.CollectionActivityModel'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.CollectionActivityModel:
    properties:
      hash:
        type: string
      is_collection_create:
        type: boolean
      is_nft_burn:
        type: boolean
      is_nft_mint:
        type: boolean
      is_nft_transfer:
        type: boolean
      nft_id:
        type: string
      timestamp:
        type: string
      token_id:
        type: string
    type: object
  dto.CollectionCreatorModel:
    properties:
      creator:
        type: string
      hash:
        type: string
      height:
        type: integer
      timestamp:
        type: string
    type: object
  dto.CollectionCreatorResponse:
    properties:
      creator:
        $ref: '#/definitions/dto.CollectionCreatorModel'
    type: object
  dto.CollectionMutateEventResponse:
    properties:
      mutated_field_name:
        type: string
      new_value:
        type: string
      old_value:
        type: string
      remark:
        type: string
      timestamp:
        type: string
    type: object
  dto.CollectionMutateEventsResponse:
    properties:
      collection_mutate_events:
        items:
          $ref: '#/definitions/dto.CollectionMutateEventResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.Event:
    properties:
      attributes:
        items:
          $ref: '#/definitions/dto.EventAttribute'
        type: array
      type:
        type: string
    type: object
  dto.EventAttribute:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  dto.Fee:
    properties:
      amount:
        items:
          $ref: '#/definitions/dto.Coin'
        type: array
      gas_limit:
        type: string
      granter:
        type: string
      payer:
        type: string
    type: object
  dto.Log:
    properties:
      events:
        items:
          $ref: '#/definitions/dto.Event'
        type: array
      log:
        description: Can be string or map[string]string
      msg_index:
        type: integer
    type: object
  dto.MessageType:
    properties:
      type:
        type: string
    type: object
  dto.ModuleHistoriesResponse:
    properties:
      module_histories:
        items:
          $ref: '#/definitions/dto.ModuleHistoryResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.ModuleHistoryResponse:
    properties:
      height:
        type: integer
      previous_policy:
        type: string
      remark:
        items:
          type: integer
        type: array
      timestamp:
        type: string
      upgrade_policy:
        type: string
    type: object
  dto.ModuleProposalModel:
    properties:
      deposit_end_time:
        type: string
      id:
        type: integer
      is_emergency:
        type: boolean
      is_expedited:
        type: boolean
      proposer:
        type: string
      resolved_height:
        type: integer
      status:
        type: string
      title:
        type: string
      types:
        type: string
      voting_end_time:
        type: string
    type: object
  dto.ModuleProposalsResponse:
    properties:
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
      proposals:
        items:
          $ref: '#/definitions/dto.ModuleProposalModel'
        type: array
    type: object
  dto.ModulePublishInfoResponse:
    properties:
      is_republished:
        type: boolean
      recent_publish_block_height:
        type: integer
      recent_publish_block_timestamp:
        type: string
      recent_publish_proposal:
        $ref: '#/definitions/dto.Proposal'
      recent_publish_transaction:
        type: string
    type: object
  dto.ModuleResponse:
    properties:
      address:
        type: string
      digest:
        type: string
      height:
        type: integer
      is_republished:
        type: boolean
      is_verified:
        type: boolean
      latest_updated:
        type: string
      module_name:
        type: string
    type: object
  dto.ModuleStatsResponse:
    properties:
      total_histories:
        type: integer
      total_proposals:
        type: integer
      total_txs:
        type: integer
    type: object
  dto.ModuleTxResponse:
    properties:
      hash:
        type: string
      height:
        type: integer
      is_ibc:
        type: boolean
      is_move_execute:
        type: boolean
      is_move_execute_event:
        type: boolean
      is_move_publish:
        type: boolean
      is_move_script:
        type: boolean
      is_move_upgrade:
        type: boolean
      is_opinit:
        type: boolean
      is_send:
        type: boolean
      messages:
        items:
          type: integer
        type: array
      sender:
        type: string
      success:
        type: boolean
      timestamp:
        type: string
    type: object
  dto.ModuleTxsResponse:
    properties:
      module_txs:
        items:
          $ref: '#/definitions/dto.ModuleTxResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.ModulesResponse:
    properties:
      modules:
        items:
          $ref: '#/definitions/dto.ModuleResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.NFTByAddressNFTCollectionResponse:
    properties:
      inner:
        type: string
    type: object
  dto.NFTByAddressNFTResponse:
    properties:
      collection:
        $ref: '#/definitions/dto.NFTByAddressNFTCollectionResponse'
      description:
        type: string
      is_burned:
        type: boolean
      token_id:
        type: string
      uri:
        type: string
    type: object
  dto.NFTByAddressResponse:
    properties:
      collection_addr:
        type: string
      collection_name:
        type: string
      nft:
        $ref: '#/definitions/dto.NFTByAddressNFTResponse'
      object_addr:
        type: string
      owner_addr:
        type: string
    type: object
  dto.NFTCollectionCollectionNFTResponse:
    properties:
      length:
        type: integer
    type: object
  dto.NFTCollectionCollectionResponse:
    properties:
      creator:
        type: string
      description:
        type: string
      name:
        type: string
      nft:
        $ref: '#/definitions/dto.NFTCollectionCollectionNFTResponse'
      uri:
        type: string
    type: object
  dto.NFTCollectionResponse:
    properties:
      collection:
        $ref: '#/definitions/dto.NFTCollectionCollectionResponse'
      object_addr:
        type: string
    type: object
  dto.NFTCollectionsResponse:
    properties:
      collections:
        items:
          $ref: '#/definitions/dto.NFTCollectionResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.NFTMintInfoResponse:
    properties:
      height:
        type: integer
      minter:
        type: string
      timestamp:
        type: string
      txhash:
        type: string
    type: object
  dto.NFTMutateEventResponse:
    properties:
      mutated_field_name:
        type: string
      new_value:
        type: string
      old_value:
        type: string
      remark:
        type: string
      timestamp:
        type: string
    type: object
  dto.NFTMutateEventsResponse:
    properties:
      nft_mutate_events:
        items:
          $ref: '#/definitions/dto.NFTMutateEventResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.NFTTxResponse:
    properties:
      is_nft_burn:
        type: boolean
      is_nft_mint:
        type: boolean
      is_nft_transfer:
        type: boolean
      timestamp:
        type: string
      txhash:
        type: string
    type: object
  dto.NFTTxsResponse:
    properties:
      nft_txs:
        items:
          $ref: '#/definitions/dto.NFTTxResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.NFTsByAddressResponse:
    properties:
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
      tokens:
        items:
          $ref: '#/definitions/dto.NFTByAddressResponse'
        type: array
    type: object
  dto.PaginationResponse:
    properties:
      next_key:
        type: string
      total:
        type: integer
    type: object
  dto.Proposal:
    properties:
      proposal_id:
        type: integer
      proposal_title:
        type: string
    type: object
  dto.PublicKey:
    properties:
      '@type':
        type: string
      key:
        type: string
    type: object
  dto.SignerInfo:
    properties:
      public_key:
        $ref: '#/definitions/dto.PublicKey'
      sequence:
        type: string
    type: object
  dto.Tx:
    properties:
      auth_info:
        $ref: '#/definitions/dto.AuthInfo'
      body:
        $ref: '#/definitions/dto.Body'
      signatures:
        items:
          type: string
        type: array
    type: object
  dto.TxModel:
    properties:
      hash:
        type: string
      height:
        type: integer
      is_ibc:
        type: boolean
      is_opinit:
        type: boolean
      is_send:
        type: boolean
      messages:
        type: object
      sender:
        type: string
      success:
        type: boolean
      timestamp:
        type: string
    type: object
  dto.TxResponse:
    properties:
      code:
        type: integer
      codespace:
        type: string
      events:
        items:
          $ref: '#/definitions/dto.Event'
        type: array
      gas_used:
        type: string
      gas_wanted:
        type: string
      height:
        type: string
      logs:
        items:
          $ref: '#/definitions/dto.Log'
        type: array
      raw_log:
        type: string
      timestamp:
        description: unix time (GMT)
        type: string
      tx:
        $ref: '#/definitions/dto.Tx'
      txhash:
        type: string
    type: object
  dto.TxsResponse:
    properties:
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
      txs:
        items:
          $ref: '#/definitions/dto.TxModel'
        type: array
    type: object
  dto.ValidatorAnswerCountsResponse:
    properties:
      abstain:
        type: integer
      all:
        type: integer
      did_not_vote:
        type: integer
      "no":
        type: integer
      no_with_veto:
        type: integer
      weighted:
        type: integer
      "yes":
        type: integer
    type: object
  dto.ValidatorBlockVoteModel:
    properties:
      height:
        type: integer
      vote:
        type: string
    type: object
  dto.ValidatorDelegationRelatedTxsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorDelegationTransaction'
        type: array
      total:
        type: integer
    type: object
  dto.ValidatorDelegationTransaction:
    properties:
      height:
        type: integer
      messages:
        items:
          $ref: '#/definitions/dto.MessageType'
        type: array
      sender:
        type: string
      timestamp:
        type: string
      tokens:
        items:
          $ref: '#/definitions/dto.Coin'
        type: array
      tx_hash:
        type: string
    type: object
  dto.ValidatorHistoricalPowerModel:
    properties:
      hour_rounded_timestamp:
        type: string
      timestamp:
        type: string
      voting_power:
        type: string
    type: object
  dto.ValidatorHistoricalPowersResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorHistoricalPowerModel'
        type: array
      total:
        type: integer
    type: object
  dto.ValidatorInfo:
    properties:
      account_address:
        type: string
      commission_rate:
        type: string
      consensus_address:
        type: string
      details:
        type: string
      identity:
        type: string
      is_active:
        type: boolean
      is_jailed:
        type: boolean
      moniker:
        type: string
      rank:
        type: integer
      uptime:
        type: integer
      validator_address:
        type: string
      voting_power:
        type: string
      website:
        type: string
    type: object
  dto.ValidatorInfoResponse:
    properties:
      info:
        $ref: '#/definitions/dto.ValidatorInfo'
      total_voting_power:
        type: string
    type: object
  dto.ValidatorProposedBlockModel:
    properties:
      hash:
        type: string
      height:
        type: integer
      timestamp:
        type: string
      transaction_count:
        type: integer
      validator:
        $ref: '#/definitions/dto.BlockProposer'
    type: object
  dto.ValidatorProposedBlocksResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorProposedBlockModel'
        type: array
      total:
        type: integer
    type: object
  dto.ValidatorUptimeEventModel:
    properties:
      height:
        type: integer
      timestamp:
        type: string
      type:
        type: string
    type: object
  dto.ValidatorUptimeResponse:
    properties:
      events:
        items:
          $ref: '#/definitions/dto.ValidatorUptimeEventModel'
        type: array
      recent_100_blocks:
        items:
          $ref: '#/definitions/dto.ValidatorBlockVoteModel'
        type: array
      uptime:
        $ref: '#/definitions/dto.ValidatorUptimeSummary'
    type: object
  dto.ValidatorUptimeSummary:
    properties:
      missed_blocks:
        type: integer
      proposed_blocks:
        type: integer
      signed_blocks:
        type: integer
      total:
        type: integer
    type: object
  dto.ValidatorVotedProposal:
    properties:
      abstain:
        type: number
      is_emergency:
        type: boolean
      is_expedited:
        type: boolean
      is_vote_weighted:
        type: boolean
      "no":
        type: number
      no_with_veto:
        type: number
      proposal_id:
        type: integer
      status:
        type: string
      timestamp:
        type: string
      title:
        type: string
      tx_hash:
        type: string
      types:
        items:
          type: string
        type: array
      "yes":
        type: number
    type: object
  dto.ValidatorVotedProposalsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorVotedProposal'
        type: array
      total:
        type: integer
    type: object
  dto.ValidatorsMetadata:
    properties:
      active_count:
        type: integer
      inactive_count:
        type: integer
      min_commission_rate:
        type: string
      percent_33_rank:
        type: integer
      percent_66_rank:
        type: integer
      total_voting_power:
        type: string
    type: object
  dto.ValidatorsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorInfo'
        type: array
      metadata:
        $ref: '#/definitions/dto.ValidatorsMetadata'
      total:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API service for the Core Indexer project
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Core Indexer API
  version: "1.0"
paths:
  /indexer/account/v1/{accountAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve account details by account address
      parameters:
      - description: Account address
        in: path
        name: accountAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/db.Account'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get account by address
      tags:
      - Account
  /indexer/account/v1/{accountAddress}/proposals:
    get:
      consumes:
      - application/json
      description: Retrieve proposals associated with an account
      parameters:
      - description: Account address
        in: path
        name: accountAddress
        required: true
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Whether to count total NFTs
        in: query
        name: pagination.count_total
        type: boolean
      - default: true
        description: Whether to reverse the order of transactions
        in: query
        name: pagination.reverse
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.AccountProposalsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get account proposals
      tags:
      - Account
  /indexer/account/v1/{accountAddress}/txs:
    get:
      consumes:
      - application/json
      description: Retrieve transactions associated with an account
      parameters:
      - description: Account address
        in: path
        name: accountAddress
        required: true
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Whether to count total transactions
        in: query
        name: pagination.count_total
        type: boolean
      - default: true
        description: Whether to reverse the order of transactions
        in: query
        name: pagination.reverse
        type: boolean
      - description: Search term for transactions
        in: query
        name: search
        type: string
      - default: false
        description: Filter by sent transactions
        in: query
        name: is_send
        type: boolean
      - default: false
        description: Filter by IBC transactions
        in: query
        name: is_ibc
        type: boolean
      - default: false
        description: Filter by OPINIT transactions
        in: query
        name: is_opinit
        type: boolean
      - default: false
        description: Filter by Move publish transactions
        in: query
        name: is_move_publish
        type: boolean
      - default: false
        description: Filter by Move upgrade transactions
        in: query
        name: is_move_upgrade
        type: boolean
      - default: false
        description: Filter by Move execute transactions
        in: query
        name: is_move_execute
        type: boolean
      - default: false
        description: Filter by Move script transactions
        in: query
        name: is_move_script
        type: boolean
      - description: Filter by transactions where the account is a signer
        in: query
        name: is_signer
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.AccounTxsResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get account transactions
      tags:
      - Account
  /indexer/block/v1/avg_blocktime:
    get:
      description: Retrieve the average time taken to mine a block
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BlockTimeAverageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get average block time
      tags:
      - Block
  /indexer/block/v1/blocks:
    get:
      consumes:
      - application/json
      description: Retrieve a list of blocks with pagination
      parameters:
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Count total number of transactions
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BlocksResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get blocks
      tags:
      - Block
  /indexer/block/v1/blocks/{height}/info:
    get:
      consumes:
      - application/json
      description: Retrieve detailed information about a block by its height
      parameters:
      - description: Block height
        in: path
        name: height
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BlockInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get block info by height
      tags:
      - Block
  /indexer/block/v1/blocks/{height}/txs:
    get:
      consumes:
      - application/json
      description: Retrieve transactions in a block by its height with pagination
      parameters:
      - description: Block height
        in: path
        name: height
        required: true
        type: integer
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Count total number of transactions
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BlockTxsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get transactions in a block by height
      tags:
      - Block
  /indexer/block/v1/latest_block_height:
    get:
      description: Retrieve the latest block height
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BlockHeightLatestResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get latest block height
      tags:
      - Block
  /indexer/module/v1/modules:
    get:
      consumes:
      - application/json
      description: Retrieve a list of modules with pagination
      parameters:
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Count total
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ModulesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get modules
      tags:
      - Module
  /indexer/module/v1/modules/{vmAddress}/{name}:
    get:
      consumes:
      - application/json
      description: Retrieve a module by id
      parameters:
      - description: VM address
        in: query
        name: vmAddress
        required: true
        type: string
      - description: Module name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ModuleResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get module by id
      tags:
      - Module
  /indexer/module/v1/modules/{vmAddress}/{name}/histories:
    get:
      consumes:
      - application/json
      description: Retrieve a list of module histories with pagination
      parameters:
      - description: VM address
        in: query
        name: vmAddress
        required: true
        type: string
      - description: Module name
        in: query
        name: name
        required: true
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Count total
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ModuleHistoriesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get module histories
      tags:
      - Module
  /indexer/module/v1/modules/{vmAddress}/{name}/proposals:
    get:
      consumes:
      - application/json
      description: Retrieve a module proposal
      parameters:
      - description: VM address
        in: query
        name: vmAddress
        required: true
        type: string
      - description: Module name
        in: query
        name: name
        required: true
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Count total
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ModuleProposalsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get module proposal
      tags:
      - Module
  /indexer/module/v1/modules/{vmAddress}/{name}/publish_info:
    get:
      consumes:
      - application/json
      description: Retrieve a module publish info
      parameters:
      - description: VM address
        in: query
        name: vmAddress
        required: true
        type: string
      - description: Module name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ModulePublishInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get module publish info
      tags:
      - Module
  /indexer/module/v1/modules/{vmAddress}/{name}/stats:
    get:
      consumes:
      - application/json
      description: Retrieve a module stats
      parameters:
      - description: VM address
        in: query
        name: vmAddress
        required: true
        type: string
      - description: Module name
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ModuleStatsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get module stats by module id
      tags:
      - Module
  /indexer/module/v1/modules/{vmAddress}/{name}/transactions:
    get:
      consumes:
      - application/json
      description: Retrieve a module transaction
      parameters:
      - description: VM address
        in: query
        name: vmAddress
        required: true
        type: string
      - description: Module name
        in: query
        name: name
        required: true
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Count total
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ModuleTxsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get module transaction
      tags:
      - Module
  /indexer/nft/v1/collections:
    get:
      consumes:
      - application/json
      description: Retrieve a list of NFT collections with optional search and pagination
      parameters:
      - description: Search term for filtering NFTs
        in: query
        name: search
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Whether to count total NFTs
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTCollectionsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT collections
      tags:
      - NFT
  /indexer/nft/v1/collections/{collectionAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific NFT collection by its collection address
      parameters:
      - description: Collection address of the NFT
        in: path
        name: collectionAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTCollectionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT collection by collection address
      tags:
      - NFT
  /indexer/nft/v1/collections/{collectionAddress}/activities:
    get:
      consumes:
      - application/json
      description: Retrieve activities related to a specific NFT collection with optional
        search and pagination
      parameters:
      - description: Collection address of the NFT
        in: path
        name: collectionAddress
        required: true
        type: string
      - description: Search term for filtering activities
        in: query
        name: search
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Whether to count total activities
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CollectionActivitiesResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT collection activities
      tags:
      - NFT
  /indexer/nft/v1/collections/{collectionAddress}/creator:
    get:
      consumes:
      - application/json
      description: Retrieve the creator of a specific NFT collection by its address
      parameters:
      - description: Collection address of the NFT
        in: path
        name: collectionAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CollectionCreatorResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT collection creator
      tags:
      - NFT
  /indexer/nft/v1/collections/{collectionAddress}/mutate_events:
    get:
      consumes:
      - application/json
      description: Retrieve mutate events for a specific NFT collection by its address
        with pagination
      parameters:
      - description: Collection address of the NFT
        in: path
        name: collectionAddress
        required: true
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Whether to count total events
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.CollectionMutateEventsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT collection mutate events
      tags:
      - NFT
  /indexer/nft/v1/collections/by_account/{accountAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of NFT collections owned by a specific account
        address
      parameters:
      - description: Account address of the NFT owner
        in: path
        name: accountAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTCollectionsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT collections by account address
      tags:
      - NFT
  /indexer/nft/v1/token/{nftAddress}/mint-info:
    get:
      consumes:
      - application/json
      description: Retrieve mint information for a specific NFT by its address
      parameters:
      - description: NFT address
        in: path
        name: nftAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTMintInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT mint information
      tags:
      - NFT
  /indexer/nft/v1/token/{nftAddress}/mutate_events:
    get:
      consumes:
      - application/json
      description: Retrieve mutate events for a specific NFT by its address with pagination
      parameters:
      - description: NFT address
        in: path
        name: nftAddress
        required: true
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Whether to count total NFTs
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTMutateEventsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT mutate events
      tags:
      - NFT
  /indexer/nft/v1/token/{nftAddress}/txs:
    get:
      consumes:
      - application/json
      description: Retrieve transactions related to a specific NFT by its address
        with pagination
      parameters:
      - description: NFT address
        in: path
        name: nftAddress
        required: true
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Whether to count total NFTs
        in: query
        name: pagination.count_total
        type: boolean
      - default: true
        description: Whether to reverse the order of transactions
        in: query
        name: pagination.reverse
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTTxsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT transactions
      tags:
      - NFT
  /indexer/nft/v1/tokens/by_account/{accountAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of NFTs owned by a specific account address with
        optional search and collection filtering
      parameters:
      - description: Account address of the NFTs owner
        in: path
        name: accountAddress
        required: true
        type: string
      - description: Search term for filtering NFTs
        in: query
        name: search
        type: string
      - description: Collection address to filter NFTs
        in: query
        name: collectionAddress
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Whether to count total NFTs
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTsByAddressResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFTs by account address
      tags:
      - NFT
  /indexer/nft/v1/tokens/by_collection/{collectionAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve a list of NFTs by their collection address with optional
        search and pagination
      parameters:
      - description: Collection address of the NFTs
        in: path
        name: collectionAddress
        required: true
        type: string
      - description: Search term for filtering NFTs
        in: query
        name: search
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Whether to count total NFTs
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTsByAddressResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFTs by collection address
      tags:
      - NFT
  /indexer/nft/v1/tokens/by_collection/{collectionAddress}/{nftAddress}:
    get:
      consumes:
      - application/json
      description: Retrieve a specific NFT by its collection address and NFT address
      parameters:
      - description: Collection address of the NFT
        in: path
        name: collectionAddress
        required: true
        type: string
      - description: NFT address
        in: path
        name: nftAddress
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTByAddressResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT by collection address and NFT address
      tags:
      - NFT
  /indexer/tx/v1/txs:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transactions with pagination
      parameters:
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Reverse order for pagination
        in: query
        name: pagination.reverse
        type: boolean
      - default: false
        description: Count total number of transactions
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TxsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get transactions
      tags:
      - Transaction
  /indexer/tx/v1/txs/{tx_hash}:
    get:
      consumes:
      - application/json
      description: Retrieve transaction details by its hash
      parameters:
      - description: Transaction hash
        in: path
        name: tx_hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TxResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get transaction by hash
      tags:
      - Transaction
  /indexer/tx/v1/txs/count:
    get:
      description: Retrieve the total number of transactions
      produces:
      - application/json
      responses:
        "200":
          description: Transaction count
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get transaction count
      tags:
      - Transaction
  /indexer/validator/v1/validators:
    get:
      description: Retrieve the list of all validators
      parameters:
      - default: true
        description: Query for active validators
        in: query
        name: is_active
        type: boolean
      - default: ""
        description: 'Sort validators by field: ''uptime'', ''commission'', ''moniker''
          or empty for default (voting power)'
        in: query
        name: sort_by
        type: string
      - default: ""
        description: Search validators by moniker or exact operator address
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get list of validators
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/answer_counts:
    get:
      description: Get validator voted governance proposal answers count
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorAnswerCountsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator proposal answers count
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/delegation_related_txs:
    get:
      description: Retrieves list of delegation related of a validator
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorDelegationRelatedTxsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get delegation transactions of a validator
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/historical_powers:
    get:
      description: Retrieves historical powers of a validator to be rendered
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorHistoricalPowersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator historical powers
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/info:
    get:
      description: Get validator info from the operator address
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator info
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/proposed_blocks:
    get:
      description: Retrieves list of proposed blocks from a validator
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorProposedBlocksResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator proposed blocks
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/uptime:
    get:
      description: Get validator uptime from the operator address
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      - description: Blocks to be queried
        in: query
        name: blocks
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorUptimeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator uptime
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/voted_proposals:
    get:
      description: Retrieves list of voted governance proposals from a validator
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      - default: ""
        description: Search validators by moniker or exact operator address
        in: query
        name: search
        type: string
      - default: ""
        description: Filter by given answer
        in: query
        name: answer
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorVotedProposalsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator voted proposals
      tags:
      - Validator
swagger: "2.0"
tags:
- description: Block related endpoints
  name: Block
- description: Health check endpoints
  name: Health
- description: Module related endpoints
  name: Module
- description: NFT related endpoints
  name: NFT
- description: Root endpoints
  name: Root
- description: Transaction related endpoints
  name: Transaction
- description: Validator related endpoints
  name: Validator
