basePath: /
definitions:
  apperror.Response:
    properties:
      message:
        type: string
      status_code:
        type: integer
    type: object
  db.Collection:
    properties:
      block_height:
        type: integer
      creator:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      uri:
        type: string
    type: object
  dto.AuthInfo:
    properties:
      fee:
        $ref: '#/definitions/dto.Fee'
      signer_infos:
        items:
          $ref: '#/definitions/dto.SignerInfo'
        type: array
    type: object
  dto.BlockHeightLatestResponse:
    properties:
      height:
        type: integer
    type: object
  dto.BlockProposer:
    properties:
      identity:
        type: string
      moniker:
        type: string
      operator_address:
        type: string
    type: object
  dto.BlockTimeAverageResponse:
    properties:
      avg_block_time:
        type: number
    type: object
  dto.Body:
    properties:
      memo:
        type: string
      messages:
        items:
          additionalProperties: true
          type: object
        type: array
      timeout_height:
        type: string
    type: object
  dto.Coin:
    properties:
      amount:
        type: string
      denom:
        type: string
    type: object
  dto.Event:
    properties:
      attributes:
        items:
          $ref: '#/definitions/dto.EventAttribute'
        type: array
      type:
        type: string
    type: object
  dto.EventAttribute:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  dto.Fee:
    properties:
      amount:
        items:
          $ref: '#/definitions/dto.Coin'
        type: array
      gas_limit:
        type: string
      granter:
        type: string
      payer:
        type: string
    type: object
  dto.Log:
    properties:
      events:
        items:
          $ref: '#/definitions/dto.Event'
        type: array
      log:
        description: Can be string or map[string]string
      msg_index:
        type: integer
    type: object
  dto.MessageType:
    properties:
      type:
        type: string
    type: object
  dto.NFTCollectionsResponse:
    properties:
      collections:
        items:
          $ref: '#/definitions/db.Collection'
        type: array
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
    type: object
  dto.PaginationResponse:
    properties:
      next_key:
        type: string
      total:
        type: integer
    type: object
  dto.PublicKey:
    properties:
      '@type':
        type: string
      key:
        type: string
    type: object
  dto.SignerInfo:
    properties:
      public_key:
        $ref: '#/definitions/dto.PublicKey'
      sequence:
        type: string
    type: object
  dto.Tx:
    properties:
      auth_info:
        $ref: '#/definitions/dto.AuthInfo'
      body:
        $ref: '#/definitions/dto.Body'
      signatures:
        items:
          type: string
        type: array
    type: object
  dto.TxModel:
    properties:
      hash:
        type: string
      height:
        type: integer
      is_ibc:
        type: boolean
      is_opinit:
        type: boolean
      is_send:
        type: boolean
      messages:
        items:
          type: integer
        type: array
      sender:
        type: string
      success:
        type: boolean
      timestamp:
        type: string
    type: object
  dto.TxResponse:
    properties:
      code:
        type: integer
      codespace:
        type: string
      events:
        items:
          $ref: '#/definitions/dto.Event'
        type: array
      gas_used:
        type: string
      gas_wanted:
        type: string
      height:
        type: string
      logs:
        items:
          $ref: '#/definitions/dto.Log'
        type: array
      raw_log:
        type: string
      timestamp:
        description: unix time (GMT)
        type: string
      tx:
        $ref: '#/definitions/dto.Tx'
      txhash:
        type: string
    type: object
  dto.TxsResponse:
    properties:
      pagination:
        $ref: '#/definitions/dto.PaginationResponse'
      txs:
        items:
          $ref: '#/definitions/dto.TxModel'
        type: array
    type: object
  dto.ValidatorAnswerCountsResponse:
    properties:
      abstain:
        type: integer
      all:
        type: integer
      did_not_vote:
        type: integer
      "no":
        type: integer
      no_with_veto:
        type: integer
      weighted:
        type: integer
      "yes":
        type: integer
    type: object
  dto.ValidatorBlockVote:
    properties:
      height:
        type: integer
      vote:
        type: string
    type: object
  dto.ValidatorDelegationRelatedTxsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorDelegationTransaction'
        type: array
      total:
        type: integer
    type: object
  dto.ValidatorDelegationTransaction:
    properties:
      height:
        type: integer
      messages:
        items:
          $ref: '#/definitions/dto.MessageType'
        type: array
      sender:
        type: string
      timestamp:
        type: string
      tokens:
        items:
          $ref: '#/definitions/dto.Coin'
        type: array
      tx_hash:
        type: string
    type: object
  dto.ValidatorHistoricalPower:
    properties:
      hour_rounded_timestamp:
        type: string
      timestamp:
        type: string
      voting_power:
        type: string
    type: object
  dto.ValidatorHistoricalPowersResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorHistoricalPower'
        type: array
      total:
        type: integer
    type: object
  dto.ValidatorInfo:
    properties:
      account_address:
        type: string
      commission_rate:
        type: string
      consensus_address:
        type: string
      details:
        type: string
      identity:
        type: string
      is_active:
        type: boolean
      is_jailed:
        type: boolean
      moniker:
        type: string
      rank:
        type: integer
      uptime:
        type: integer
      validator_address:
        type: string
      voting_power:
        type: string
      website:
        type: string
    type: object
  dto.ValidatorInfoResponse:
    properties:
      info:
        $ref: '#/definitions/dto.ValidatorInfo'
      total_voting_power:
        type: string
    type: object
  dto.ValidatorProposedBlock:
    properties:
      hash:
        type: string
      height:
        type: integer
      timestamp:
        type: string
      transaction_count:
        type: integer
      validator:
        $ref: '#/definitions/dto.BlockProposer'
    type: object
  dto.ValidatorProposedBlocksResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorProposedBlock'
        type: array
      total:
        type: integer
    type: object
  dto.ValidatorUptimeEvent:
    properties:
      height:
        type: integer
      timestamp:
        type: string
      type:
        type: string
    type: object
  dto.ValidatorUptimeResponse:
    properties:
      events:
        items:
          $ref: '#/definitions/dto.ValidatorUptimeEvent'
        type: array
      recent_100_blocks:
        items:
          $ref: '#/definitions/dto.ValidatorBlockVote'
        type: array
      uptime:
        $ref: '#/definitions/dto.ValidatorUptimeSummary'
    type: object
  dto.ValidatorUptimeSummary:
    properties:
      missed_blocks:
        type: integer
      proposed_blocks:
        type: integer
      signed_blocks:
        type: integer
      total:
        type: integer
    type: object
  dto.ValidatorVotedProposal:
    properties:
      abstain:
        type: number
      is_emergency:
        type: boolean
      is_expedited:
        type: boolean
      is_vote_weighted:
        type: boolean
      "no":
        type: number
      no_with_veto:
        type: number
      proposal_id:
        type: integer
      status:
        type: string
      timestamp:
        type: string
      title:
        type: string
      tx_hash:
        type: string
      types:
        items:
          type: string
        type: array
      "yes":
        type: number
    type: object
  dto.ValidatorVotedProposalsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorVotedProposal'
        type: array
      total:
        type: integer
    type: object
  dto.ValidatorsMetadata:
    properties:
      active_count:
        type: integer
      inactive_count:
        type: integer
      min_commission_rate:
        type: string
      percent_33_rank:
        type: integer
      percent_66_rank:
        type: integer
      total_voting_power:
        type: string
    type: object
  dto.ValidatorsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/dto.ValidatorInfo'
        type: array
      metadata:
        $ref: '#/definitions/dto.ValidatorsMetadata'
      total:
        type: integer
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API service for the Core Indexer project
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Core Indexer API
  version: "1.0"
paths:
  /indexer/block/v1/avg_blocktime:
    get:
      description: Retrieve the average time taken to mine a block
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BlockTimeAverageResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get average block time
      tags:
      - Block
  /indexer/block/v1/latest_block_height:
    get:
      description: Retrieve the latest block height
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.BlockHeightLatestResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get latest block height
      tags:
      - Block
  /indexer/tx/v1/txs:
    get:
      consumes:
      - application/json
      description: Retrieve a list of transactions with pagination
      parameters:
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      - default: false
        description: Reverse order for pagination
        in: query
        name: pagination.reverse
        type: boolean
      - default: false
        description: Count total number of transactions
        in: query
        name: pagination.count_total
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TxsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get transactions
      tags:
      - Transaction
  /indexer/tx/v1/txs/{tx_hash}:
    get:
      consumes:
      - application/json
      description: Retrieve transaction details by its hash
      parameters:
      - description: Transaction hash
        in: path
        name: tx_hash
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.TxResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get transaction by hash
      tags:
      - Transaction
  /indexer/tx/v1/txs/count:
    get:
      description: Retrieve the total number of transactions
      produces:
      - application/json
      responses:
        "200":
          description: Transaction count
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get transaction count
      tags:
      - Transaction
  /indexer/validator/v1/validators:
    get:
      description: Retrieve the list of all validators
      parameters:
      - default: true
        description: Query for active validators
        in: query
        name: is_active
        type: boolean
      - default: ""
        description: 'Sort validators by field: ''uptime'', ''commission'', ''moniker''
          or empty for default (voting power)'
        in: query
        name: sort_by
        type: string
      - default: ""
        description: Search validators by moniker or exact operator address
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get list of validators
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/answer-counts:
    get:
      description: Get validator voted governance proposal answers count
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorAnswerCountsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator proposal answers count
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/delegation-related-txs:
    get:
      description: Retrieves list of delegation related of a validator
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorDelegationRelatedTxsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get delegation transactions of a validator
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/historical-powers:
    get:
      description: Retrieves historical powers of a validator to be rendered
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorHistoricalPowersResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator historical powers
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/info:
    get:
      description: Get validator info from the operator address
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorInfoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator info
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/proposed-blocks:
    get:
      description: Retrieves list of proposed blocks from a validator
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorProposedBlocksResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator proposed blocks
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/uptime:
    get:
      description: Get validator uptime from the operator address
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      - description: Blocks to be queried
        in: query
        name: blocks
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorUptimeResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator uptime
      tags:
      - Validator
  /indexer/validator/v1/validators/{operatorAddr}/voted-proposals:
    get:
      description: Retrieves list of voted governance proposals from a validator
      parameters:
      - description: Validator operator address
        in: path
        name: operatorAddr
        required: true
        type: string
      - default: ""
        description: Search validators by moniker or exact operator address
        in: query
        name: search
        type: string
      - default: ""
        description: Filter by given answer
        in: query
        name: answer
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ValidatorVotedProposalsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get validator voted proposals
      tags:
      - Validator
  /nft/v1/collections:
    get:
      consumes:
      - application/json
      description: Retrieve a list of NFT collections with optional search and pagination
      parameters:
      - description: Search term for filtering collections
        in: query
        name: search
        type: string
      - default: 0
        description: Offset for pagination
        in: query
        name: pagination.offset
        type: integer
      - default: 10
        description: Limit for pagination
        in: query
        name: pagination.limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.NFTCollectionsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/apperror.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/apperror.Response'
      summary: Get NFT collections
      tags:
      - NFT
swagger: "2.0"
tags:
- description: NFT related endpoints
  name: NFT
- description: Transaction related endpoints
  name: Transaction
- description: Health check endpoints
  name: Health
- description: Root endpoints
  name: Root
- description: Validator related endpoints
  name: Validator
